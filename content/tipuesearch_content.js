var tipuesearch = {"pages": [{'title': 'About', 'text': '\n 40823210李柏諺 \n 網站: https://40823210.github.io/cd2021/content/index.html \n 倉儲: https://github.com/40823210/cd2021 \n \n Stage1-bg18 小組網站: https://40823210.github.io/stage1-bg18/content/index.html 小組倉儲: https://github.com/40823210/stage1-bg18 \n Stage2-bg11 小組網站: https://40823210.github.io/stage2-bg11/content/index.html 小組倉儲: https://github.com/40823210/stage2-bg11 \n stage3-bg2 小組網站: https://40823210.github.io/stage3-bg2/content/index.html 小組倉儲: https://github.com/40823210/stage3-bg2 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Stage1-bg18', 'text': 'Stage1-bg18 \n 小組網站: https://40823210.github.io/stage1-bg18/content/index.html \n 小組倉儲: https://github.com/40823210/stage1-bg18 \n \n W2-W4 (3 Weeks): 二人一組 \n 40823210李柏諺 \n 網站: https://40823210.github.io/cd2021/content/index.html \n 倉儲: https://github.com/40823210/cd2021 \n 40823209顏沐恩 \n 網站: https://40823209.github.io/cd2021/content/index.html \n 倉儲: https://github.com/40823209/cd2021 \n', 'tags': '', 'url': 'Stage1-bg18.html'}, {'title': 'w1', 'text': '1.下載 可攜程式系統 \n \n 2.確認版本 \n python\npip list\ngitversion \n \n \n \n 3.設定proxy \n \n 4.設定身分 \n git config user.name "40823210"\ngit config user.email "40823210@gm.nfu.edu.tw" \n \n \n 5.github建立cd2021倉儲 \n \n 6.隨身碟增加cd2021資料夾 \n git clone https://github.com/40823210/cd2021.git\ngit submodule add https://github.com/mdecourse/cmsimde.git cmsimde \n \n \n 7.下載模組 \n pip install flask\npip install flask_cors\npip install lxml\npip install bs4\npip install markdown\npip install pelican\npip install leo \n \n \n \n \n \n \n \n 8.倉儲設定(完成後有綠勾表示完成) \n \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'LEO', 'text': '1.開啟leo \n cd tmp\nleo \n \n 2.修改課程名稱/內容 \n \n \n 3.修改作者/網站名稱 \n \n \n 4.修改網站網址/網站名稱 \n \n \n 5.完成 \n \n \n', 'tags': '', 'url': 'LEO.html'}, {'title': 'w2~w3', 'text': 'stage1-bg18 題目:水球發射器 動機:天氣炎熱 玩水消暑 第二週:繪製零件圖 第三週:使用程式進行模擬 第四週:報告 \n', 'tags': '', 'url': 'w2~w3.html'}, {'title': '零件組合圖-1', 'text': '本次零件由本人設計繪製 \n 主題:水球發射器 \n \n 1.桶身 \n \n 2.拉桿 \n \n 3.拉桿彈簧 \n \n 4.按鈕基座 \n \n 5.按鈕彈簧 \n \n 6.按鈕 \n \n 7.檔片 \n \n 8.模擬水球 \n \n', 'tags': '', 'url': '零件組合圖-1.html'}, {'title': '爆炸圖', 'text': '\n \n', 'tags': '', 'url': '爆炸圖.html'}, {'title': 'Inventor模擬', 'text': '\n \n', 'tags': '', 'url': 'Inventor模擬.html'}, {'title': 'w4(報告)', 'text': 'PDF: 水球發射器.pdf \n 報告過程影片 \n \n \n', 'tags': '', 'url': 'w4(報告).html'}, {'title': 'Stage2-bg11', 'text': 'Stage2-bg11 \n 小組網站: https://40823210.github.io/stage2-bg11/content/index.html \n 小組倉儲: https://github.com/40823210/stage2-bg11 \n \n W5-W9 (5 Weeks): 四人一組 \n 40823210李柏諺 \n 網站: https://40823210.github.io/cd2021/content/index.html \n 倉儲: https://github.com/40823210/cd2021 \n 40823209顏沐恩 \n 網站: https://40823209.github.io/cd2021/content/index.html \n 倉儲: https://github.com/40823209/cd2021 \n 40823201陳品喬 \n 網站: https://40823201.github.io/cd2021/content/index.html \n 倉儲: hhttps://github.com/40823201/cd2021 \n 40823217莊子靖 \n 網站: https://40823217.github.io/cd2021/content/index.html \n 倉儲: https://github.com/40823217/cd2021 \n \n', 'tags': '', 'url': 'Stage2-bg11.html'}, {'title': 'w5', 'text': '乙班各組stag1報告時間 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': 'stage2-bg11 題目:免彎腰販賣機 動機:思考到一些老人、行動不便者、受傷的人可能無法彎腰去拿取物品， \n 所以我們將商品出口設置在右側中間。當我們買完商品時，商品即會掉落於斜面， \n 且滾動至右側平台，而當平台偵測到重量，平台就會上升至出口處， \n 購買者即可不必彎腰就可以拿去商品。 \n 第五週:討論主題 \n 第六~七週:繪製零件圖 \n 第八週:程式模擬&修正 \n 第九週:報告 \n', 'tags': '', 'url': 'w6.html'}, {'title': '零件組合圖-2', 'text': '本次零件由本人設計繪製 \n \n 自動販賣機(組合) \n \n * 販賣機本體 \n \n * 販賣機門 \n \n * 置物架 \n \n * 鎖點支架 \n \n * 上滑軌道 \n \n * 下滑軌道 \n \n * 上下滑軌輪 \n \n * 滾筒 \n \n * 蝸桿支架 \n \n * 蝸桿滑塊 \n \n * 短蝸桿 \n \n * 長蝸桿 \n \n * 位移平台 \n \n * 螺旋鉤子 \n \n * 螺旋鉤子底座 \n \n \n', 'tags': '', 'url': '零件組合圖-2.html'}, {'title': 'w7', 'text': '本週本人我利用上週繪製完的零件用inventor製作了一個簡單的模擬動畫 \n \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': 'coppeliasim模擬 \n 模 擬者:40823217 \n 第一版 \n 第一次模擬 \n 一開始因為未與齒輪做連結而導致無法協調 \n \n 第二次模擬 \n 雖然與齒輪做連結了，因為齒輪無法帶動板子上升 \n 而導致破圖，使板子上升到齒輪上面 \n \n 第三次模擬 \n 重新調整板子與齒輪的連結關係後，雖然可以透過旋轉尺 \n 齒輪來使 板子上升，但與螺桿的配合還是怪怪的，然後無 \n 法上升 到指定高度。之後我們將下方滾輪也讓它旋轉，使 \n 商品 能滾進平台。還有上方的彈簧，讓它能旋轉使商品能掉 \n 落 至滾輪處。 \n \n \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9(報告)', 'text': '報告週 \n 課中報告影片 \n \n 1. Reveal \n 2. youtube \n \n 3.PDF( 下載 ) \n', 'tags': '', 'url': 'w9(報告).html'}, {'title': 'Stage3-bg2', 'text': 'W10-W18 (9 Weeks): 八人一組 \n stage3-bg2 \n 網站: https://40823210.github.io/stage3-bg2/content/index.html \n 倉儲: https://github.com/40823210/stage3-bg2 \n 小組成員(倉儲/網站): \n 40823217 / 40823217 \n 40823201 / 40823201 \n 40823209 / 40823209 \n 40823210 / 40823210 \n 40823206 / 40823206 \n 40823207 / 40823207 \n 40823223 / 40823223 \n 40823224 / 40823224 \n', 'tags': '', 'url': 'Stage3-bg2.html'}, {'title': 'task1', 'text': '◾ 先到task1將 stage3_2b.txt \xa0 內容下載 \n ◾將以下程式碼存至與txt檔同目錄下，可初步資料讀取程式 \n # open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open("stage3_2a.txt") as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n#print(len(data))\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    print(group)\n# the following will use group data to generate needed html \n ◾再利用以下程式碼將各組的連結顯現 \n def stu2b(account):\n    if account == "40823231":\n        return account + "-2"\n#將學號40823231改成40823231-2\n    elif account[0:3] == "407":\n        return "s" + account\n#將學號407xxxxx改成s407xxxxx\n    else:\n        return account\n#剩餘的其他學號不變\n \nteamb = []\n \n# open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open("stage3_2b.txt") as fh:\n#開啟stage3_2b.txt檔案\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n#print(len(data))\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    teamb.append(group)\n     \noutput = ""    \nseperator = "-"*10 + "<br />"\n#產生分隔線\n \nfor i in teamb[0:]:\n    team = i[0]\n    leader = stu2b(i[1])\n    m1 = stu2b(i[3])\n    m2 = stu2b(i[5])\n    m3 = stu2b(i[7])\n    m4 = stu2b(i[9])\n    m5 = stu2b(i[11])\n    m6 = stu2b(i[13])\n#小組、組長、其他六個組員\n     \n    try:\n        m7 = stu2b(i[15])\n    except:\n        m7 = ""\n#第七個組員\n    try:\n        m8 = stu2b(i[17])\n    except:\n        m8 = ""\n#第八個組員\n         \n    leaderrepo = "<a href=\'http://github.com/" + leader + "/cd2021\'>" + leader + " repo</a>"\n    leadersite = "<a href=\'http://" + leader + ".github.io/cd2021\'>" + leader +  " site</a>"\n    m1repo = "<a href=\'http://github.com/" + m1 + "/cd2021\'>" + m1 + " repo</a>"\n    m1site = "<a href=\'http://" + m1 + ".github.io/cd2021\'>" + m1 +  " site</a>"\n    m2repo = "<a href=\'http://github.com/" + m2 + "/cd2021\'>" + m2 + " repo</a>"\n    m2site = "<a href=\'http://" + m2 + ".github.io/cd2021\'>" + m2 +  " site</a>"\n    m3repo = "<a href=\'http://github.com/" + m3 + "/cd2021\'>" + m3 + " repo</a>"\n    m3site = "<a href=\'http://" + m3 + ".github.io/cd2021\'>" + m3 +  " site</a>"\n    m4repo = "<a href=\'http://github.com/" + m4 + "/cd2021\'>" + m4 + " repo</a>"\n    m4site = "<a href=\'http://" + m4 + ".github.io/cd2021\'>" + m4 +  " site</a>"\n    m5repo = "<a href=\'http://github.com/" + m5 + "/cd2021\'>" + m5 + " repo</a>"\n    m5site = "<a href=\'http://" + m5 + ".github.io/cd2021\'>" + m5 +  " site</a>"\n    m6repo = "<a href=\'http://github.com/" + m6 + "/cd2021\'>" + m6 + " repo</a>"\n    m6site = "<a href=\'http://" + m6 + ".github.io/cd2021\'>" + m6 +  " site</a>"\n  \n \n    teamrepo = "<a href=\'http://github.com/" + leader + "/" + team + "\'>" + team + " repo</a>"\n    teamsite =  "<a href=\'http://" + m1 + ".github.io/" + team + "\'>" + team +  " site</a>"\n \n    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site\n#分別設置小組、組長以及組員的倉儲&網站連結\n     \n    if m7 != "":\n       m7repo = "<a href=\'http://github.com/" + m7 + "/cd2021\'>" + m7 + " repo</a>"\n       m7site = "<a href=\'http://" + m7 + ".github.io/cd2021\'>" + m7 +  " site</a>"   \n       output += " |  " + m7repo + "| " + m7site\n    else:\n        output += "" \n#如果有第七個組員會再加倉儲和網站沒有的話就空白\n     \n    if m8 != "":\n       m8repo = "<a href=\'http://github.com/" + m8 + "/cd2021\'>" + m8 + " repo</a>"\n       m8site = "<a href=\'http://" + m8 + ".github.io/cd2021\'>" + m8 +  " site</a>"   \n       output += " |  " + m8repo + "| " + m8site + "<br />" + seperator\n    else:\n        output += "<br />" + seperator\n#如果有第八個組員會再加倉儲和網站最後再加分隔線\n \n \nprint(output)\n# the following will use group data to generate needed html\n#輸出 \n ◾結果 \n stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site ---------- \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '將個人在 stage1 與 stage2 所完成的 coppeliasim 場景, 採 Python remote API 進行操控。 \n', 'tags': '', 'url': 'task2.html'}, {'title': 'S1-B18', 'text': '本人是stage1-bg18成員 \n stage1 所完成的 coppeliasim 場景, 採 Python remote API 進行操控。 \n ---------- \n (按鍵指令) \n Z............拉桿續力\n"空白建".....拉桿前推\nesc..........結束 \n ◾實際操作影片 \n \n \n ---------- \n (程式碼) \n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n\nprint (\'Start\')\n\n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.0.12\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n    \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823210",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n    opmode = vrep.simx_opmode_oneshot_wait\n    \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,rod_handle=vrep.simxGetObjectHandle(clientID,"joint",opmode)\n    ret,ro_handle=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n\n    #ret,main = vrep.simxGetObjectHandle(clientID, "main", opmode)\n    while True:\n    \n        #keyboard "Z" \n        if keyboard.is_pressed("Z"):\n            vrep.simxSetJointTargetVelocity(clientID,rod_handle,1,opmode)\n            \n        #keyboard "space" \n        if keyboard.is_pressed("space"):\n            vrep.simxSetJointTargetVelocity(clientID,rod_handle,-99999,opmode)  \n\n        #keyboard "esc" \n        if  keyboard.is_pressed("esc"):\n            vrep.simxStopSimulation(clientID, opmode)\n            break\n        \nelse:\n    print (\'Failed connecting to remote API server\')\n    print (\'End\') \n --------- \n 影片場景之ttt檔及其他相關檔案，可至本人的個人倉儲下載: \n   https://github.com/40823210/cd2021   \n (檔案位置:task2 ➝水球發射器) \n', 'tags': '', 'url': 'S1-B18.html'}, {'title': 'S2-B11', 'text': '本人是stage2-bg11成員 \n stage2 所完成的 coppeliasim 場景, 採 Python remote API 進行操控。 \n ---------- \n (按鍵指令) \n 1~9..........控制螺旋鉤子\n"空白建".....停止螺旋鉤子\nZ............關門\nX............暫停開/關門\nC............開門\nO............控制滾輪\nW............平台上升\nE............暫停平台\nS............下降平台\nesc..........結束 \n ◾實際操作影片 \n \n \n ---------- (程式碼) \n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n\nprint (\'Start\')\n\n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.0.12\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n    \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823210",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n    opmode = vrep.simx_opmode_oneshot_wait\n    \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,DOOR_handle=vrep.simxGetObjectHandle(clientID,"joint4",opmode)\n    ret,C1_handle=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,B1_handle=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,SP5_handle=vrep.simxGetObjectHandle(clientID,"joint",opmode)\n    ret,S1_1_handle=vrep.simxGetObjectHandle(clientID,"S1_1",opmode)\n    ret,S2_1_handle=vrep.simxGetObjectHandle(clientID,"S2_1",opmode)\n    ret,S3_1_handle=vrep.simxGetObjectHandle(clientID,"S3_1",opmode)\n    ret,S4_1_handle=vrep.simxGetObjectHandle(clientID,"S4_1",opmode)\n    ret,S5_1_handle=vrep.simxGetObjectHandle(clientID,"S5_1",opmode)\n    ret,S6_1_handle=vrep.simxGetObjectHandle(clientID,"S6_1",opmode)\n    ret,S7_1_handle=vrep.simxGetObjectHandle(clientID,"S7_1",opmode)\n    ret,S8_1_handle=vrep.simxGetObjectHandle(clientID,"S8_1",opmode)\n    ret,S9_1_handle=vrep.simxGetObjectHandle(clientID,"S9_1",opmode)\n    ret,S10_1_handle=vrep.simxGetObjectHandle(clientID,"S10_1",opmode)\n    #ret,main = vrep.simxGetObjectHandle(clientID, "main", opmode)\n    while True:\n    \n        #keyboard "5" \n        if keyboard.is_pressed("5"):\n            vrep.simxSetJointTargetVelocity(clientID,SP5_handle,1,opmode)\n        \n        #keyboard "space" \n        if keyboard.is_pressed("space"):\n            vrep.simxSetJointTargetVelocity(clientID,SP5_handle,0,opmode)\n        #keyboard "O" \n        if keyboard.is_pressed("O"):\n            vrep.simxSetJointTargetVelocity(clientID,S1_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S2_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S3_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S4_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S5_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S6_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S7_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S8_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S9_1_handle,100,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,S10_1_handle,100,opmode)\n        #keyboard "W" \n        if keyboard.is_pressed("W"):\n            vrep.simxSetJointTargetVelocity(clientID,C1_handle,1,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,B1_handle,2,opmode)\n         #keyboard "E" \n        if keyboard.is_pressed("E"):\n            vrep.simxSetJointTargetVelocity(clientID,C1_handle,0,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,B1_handle,0,opmode)   \n        #keyboard "S" \n        if keyboard.is_pressed("S"):\n            vrep.simxSetJointTargetVelocity(clientID,C1_handle,-1,opmode)\n            vrep.simxSetJointTargetVelocity(clientID,B1_handle,-2,opmode)\n        #keyboard "Z" \n        if keyboard.is_pressed("Z"):\n            vrep.simxSetJointTargetVelocity(clientID,DOOR_handle,1000,opmode)\n       #keyboard "X" \n        if keyboard.is_pressed("X"):\n            vrep.simxSetJointTargetVelocity(clientID,DOOR_handle,0,opmode)\n        #keyboard "C" \n        if keyboard.is_pressed("C"):\n            vrep.simxSetJointTargetVelocity(clientID,DOOR_handle,-1.5,opmode)              \n        #keyboard "esc" \n        if  keyboard.is_pressed("esc"):\n            vrep.simxStopSimulation(clientID, opmode)\n            break\n        \nelse:\n    print (\'Failed connecting to remote API server\')\n    print (\'End\') \n --------- \n 影片場景之ttt檔及其他相關檔案，可至本人的個人倉儲下載: \n https://github.com/40823210/cd2021 \n (檔案位置:task2 ➝販賣機) \n', 'tags': '', 'url': 'S2-B11.html'}, {'title': 'task3', 'text': '', 'tags': '', 'url': 'task3.html'}, {'title': 'w10', 'text': '"Stage3進度" \n 模擬:40823210、40823217 ； 日期:04/30 \n 目前利用coppeliasim模擬商品掉落情形，但商品會因為螺旋轉動而倒向一邊，不盡理想，下次改善重點。 \n \n ------------------------------------------------------------------------------------------------------ \n "討論Stage3主題" \n \n 經小組成員討論後，決定主題延續Stage2-bg11的免彎腰販賣機，進而加入遠端操控的功能。 \n 分配任務 \n 程序編寫:40823224 \n 模擬:4082310/40823217 \n 繪圖:40823206/40823223/40823207 \n 網頁製作:40823209/40823201 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': '"Stage3進度" \n 模擬:40823210、40823217 ； 日期:05/07 \n 此次利用coppeliasim模擬商品掉落情形，既上禮拜經驗，本次增加了2跟檔桿，但增加檔桿後似乎與螺旋勾子有砰撞上面的問題...。 \n \n 模擬:40823210、40823217 ； 日期:05/07 \n 既上面模擬修改後，改善了檔桿與螺旋勾子的碰撞問題，並移動了位子；且將商品稍微放大並讓商品貼齊置物架，使商品在移動過程中穩定一些。 \n \n ------------------------------------------------------------------------------------------ \n "使用Python remote API 進行操控" \n ◾下載 /downloads/vrep_remoteapi_ex.7z \n ◾開啟2w1a.py \n \n ◾將import vrep改成import sim as vrep \n \n ◾更改IPv4位址 \n \n ◾可利用ipconfig指令查看自己的IPv4位址 \n \n ◾Tools-Go \n \n ◾結果 \n \n ◾END \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '"Stage3進度" \n 模擬:40823210、40823217 ； 日期:05/14 \n 已修改完畢，剩一些小細節需要去修正，例如:碰撞上的問題、以 \n 及一些速度的變化要調正外。其他的沒什麼大礙了，程式碼也幾乎沒有問題。(然後因 \n 為我電腦超級無敵的卡所以才呈現的一禎一禎的。) \n \n [東西都在我們網站能下載] \n ------------------------------------------------------------------------------------------------------ \n "OBS的使用" \n ◾打開OBS \n \n ◾新增-顯示器擷取 \n \n ◾新增-視訊擷取裝置 \n \n ◾設定-串流-輸入串劉金鑰 \n \n ◾串流金鑰可於YouTube開始進行直播時複製 \n \n ◾ 開始串流 \n \n 補充:\xa0 如果 視訊擷取裝置無法正常顯示時... \n ◾ 開始-顯示器-圖形設定 \n \n ◾ 瀏覽-找尋OBS64.EXE-新增 \n \n ◾選項-省電 \n \n \n ◾完成 \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w13', 'text': '"Stage3進度" \n 模擬:40823210、40823217 ； 日期:05/21 \n 此次利用coppeliasim模擬整體免彎腰販賣機，既上禮拜經驗，重新定義了各個碰撞&動態設定，也調整了各物體轉速度，為了使其整體穩定一點，雖有好轉，但仍然需再多加微調；問題較大的地方是在於"00:57"平台要上升時，有二物件會產生分開的情況，有待下次改善...。 \n (按鍵指令) \n 1~9..........控制螺旋鉤子\n"空白建".....停止螺旋鉤子\nC............控制關門\nV............暫停關門\nO............控制滾輪\nW............平台上升\nE............暫停平台\nS............下降平台\nesc..........結束 \n \n ------------------------------------------------------------------------------------------------------ \n "第13周上課小組討論直播影片" \n \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': '"Stage3進度" \n 模擬:40823210、40823217 ； 日期:05/28 \n 此次利用coppeliasim模擬整體免彎腰販賣機，既上禮拜經驗，透過對部分零件進行選擇性的分解&組合和Joint的功能，解決了過往平台要上升時，會有二物件產生分開的情況；此外也發現coppeliasim在分解STL檔案組合模型時，零件會分解的不盡理想，此次也改善了零件分解過多的問題；最後對於販賣機的門在進行分解後依然是保持一體的，導致取物口的窗戶無法開啟，目前正在想辦法解決...。 \n (按鍵指令) \n 1~9..........控制螺旋鉤子\n"空白建".....停止螺旋鉤子\nC............關門\nV............暫停開/關門\nB............開門\nO............滾輪\nW............平台上升\nE............平台暫停\nS............平台下降\nesc..........結束 \n \n ---------- \n 影片場景之ttt檔及相關資料，可至stage3-bg2倉儲下載:  https://github.com/40823210/stage3-bg2 \n (檔案名稱:免彎腰販賣機\xa0➝販賣機3.5) \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '"Stage3進度" \n 模擬:40823210、40823217 ； 日期:05/30 \n 此次利用coppeliasim模擬整體免彎腰販賣機，既上禮拜經驗，對於販賣機的門無法分解，這次將舊有的門刪除並用inventor重新進行編輯組合，轉為stl檔後再輸入進coppeliasim進行分解，並對取物口設置按鍵指令，使取物口也可利用鍵盤按鍵進行控制。 \n (按鍵指令) \n 1~9..........控制螺旋鉤子\n"空白建".....停止螺旋鉤子\nZ............關門\nX............暫停開/關門\nC............開門\nO............滾輪\nW............平台上升\nE............平台暫停\nS............平台下降\nB............取物口開啟\nN............取物口暫停\nM............取物口關閉\nesc..........結束 \n \n ---------- \n 影片場景之ttt檔及相關資料，可至stage3-bg2倉儲下載:  https://github.com/40823210/stage3-bg2 \n (檔案名稱:免彎腰販賣機\xa0➝販賣機3.6) \n ----------------------------- \n "roboDK" \n 利用外部 Python 程式重建機械手臂 Pick and Place 模擬 \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': 'Google Drive下載連結: https://drive.google.com/file/d/1BKMA9DMvI_cxyJNDcPQxKfa3I4id9ED2/view?usp=sharing \n ---------- \n 項目一:Onshape 零組件繪製 \n \n 項目二:建立 CoppeliaSim 4.1.0 MTB robot 場景 \n 項目三:手臂末端加入 components-gripper-suction pad 吸盤 \n (項目二/三 內容放於同一影片) \n \n 項目四:逆向運動學函式 \n (有2部影片分別為 鍵盤控制/ 程式迴圈 兩種方式) \n "鍵盤控制" \n function sysCall_init()\n    joint1=sim.getObjectHandle(\'joint1\')\n    joint2=sim.getObjectHandle(\'joint2\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    joint3=sim.getObjectHandle(\'joint3\')\n    sim.setJointTargetPosition(joint1,0)\n    sim.setJointTargetPosition(joint2,0)\n    sim.setJointTargetPosition(joint3,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\n    deg3=0\nend\n\nfunction sysCall_actuation()\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==2009) then\n            deg1=deg1+1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint1,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2010) then\n            deg1=deg1-1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint1,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2007) then\n            deg2=deg2+1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint2,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==2008) then\n            deg2=deg2-1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint2,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==115) then\n                sim.setJointTargetPosition(jointz,-0.085)\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if (auxiliaryData[1]==119) then\n                sim.setJointTargetPosition(jointz,0)\n            end\n            if (auxiliaryData[1]==32) then\n                sim.setIntegerSignal("pad_switch",0)\n            end\n            sim.setJointTargetPosition(joint3,deg3*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend \n \n 鍵盤控制操作: \n ⇧ -黃軸逆時鐘旋轉 \n ⇩ -黃軸順時鐘旋轉 \n ⇦ -紫 軸逆時鐘旋轉 \n ⇨ -紫 軸順時鐘旋轉 \n S-吸盤向下 \n W-吸盤向上並吸取 \n 空白鍵-放下 \n \n - \n "程式迴圈" \n function sysCall_init()\n    corout=coroutine.create(coroutineMain)\nend\n\nfunction sysCall_actuation()\n    if coroutine.status(corout)~=\'dead\' then\n        local ok,errorMsg=coroutine.resume(corout)\n        if errorMsg then\n            error(debug.traceback(corout,errorMsg),2)\n        end\n    end\nend\n\nfunction moving(x,y)\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    print(deg1)\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\nfunction coroutineMain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.05)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do \n    moving(0.2,0.7)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.setJointTargetPosition(jointz,-0.05)\n        sim.wait(3)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(3)\n        moving(-0.3,-0.55)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",0)\n        sim.wait(3)\n        sim.setIntegerSignal("pad_switch",1)\n        sim.setJointTargetPosition(jointz,-0.05)\n        sim.wait(3)\n        sim.setJointTargetPosition(jointz,0)\n        sim.wait(3)\n    end\n    end \n \n 項目五:Python remote API 逆向運動學函式 \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\ndef moving(x,y):\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 :\n        deg_base1=deg1_base+math.pi\n    \n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    vrep.simxSetJointTargetPosition(clientID,joint01,deg1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,-deg2,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,deg3,opmode)\n\nprint (\'Start\')\n \nvrep.simxFinish(-1)\n \nclientID = vrep.simxStart(\'192.168.0.10\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n\n    res = vrep.simxAddStatusbarMessage(\n        clientID, "This is teach by 40823214 ",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n\n\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n    \n    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.055,opmode)\n    time.sleep(3)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n    \n    while True:\n        moving(0.2,0.7)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.055,opmode)\n        time.sleep(3)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n        moving(-0.3,-0.6)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n        time.sleep(3)\n        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n        vrep.simxSetJointTargetPosition(clientID,jointz,-0.055,opmode)\n        time.sleep(3)\n        vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n            \n             \n ---------- \n "參考40823214的2部直播影片" \n 影片1: \n https://www.youtube.com/watch?v=GUUKSgN93eI \n 影片2: \n https://www.youtube.com/watch?v=gZd9KlVS9BI \n \n \n', 'tags': '', 'url': 'w16.html'}, {'title': 'w17', 'text': '', 'tags': '', 'url': 'w17.html'}, {'title': 'w18', 'text': '', 'tags': '', 'url': 'w18.html'}, {'title': '影片', 'text': '每週拍影片紀錄進度&過程。 \n', 'tags': '', 'url': '影片.html'}, {'title': '第2週', 'text': '\n', 'tags': '', 'url': '第2週.html'}, {'title': '第3週', 'text': '\n', 'tags': '', 'url': '第3週.html'}, {'title': '第4週(報告)', 'text': '課中報告影片 \n \n \n ------------------------------------------------------------------------------------------------------- \n \n \n', 'tags': '', 'url': '第4週(報告).html'}, {'title': '第5週', 'text': '\n', 'tags': '', 'url': '第5週.html'}, {'title': '第6週', 'text': '\n', 'tags': '', 'url': '第6週.html'}, {'title': '第7週', 'text': '\n', 'tags': '', 'url': '第7週.html'}, {'title': '第8週', 'text': '\n', 'tags': '', 'url': '第8週.html'}, {'title': '第9週(報告)', 'text': '課中報告影片 \n \n \n ------------------------------------------------------------------------------------------------------- \n \n \n', 'tags': '', 'url': '第9週(報告).html'}, {'title': 'gitter討論', 'text': '"stage1-bg18" \n \n \n ---------- \n "stage2-bg11" \n \n ---------- \n "Stage3-bg2" \n \n 經小組成員討論後，決定主題延續Stage2-bg11的免彎腰販賣機，進而加入遠端操控的功能。 \n 分配任務 \n 程序編寫:40823224 \n 模擬:4082310/40823217 \n 繪圖:40823206/40823223/40823207 \n 網頁製作:40823209/40823201 \n', 'tags': '', 'url': 'gitter討論.html'}, {'title': '筆記', 'text': '', 'tags': '', 'url': '筆記.html'}, {'title': '9443', 'text': 'cd tmp\ncd cd2021\ncd cmsimde\npython wsgi.py \n \n \n https://localhost:9443 \n \n', 'tags': '', 'url': '9443.html'}, {'title': '8444', 'text': 'File →open→http-server.py \n Tools→GO \n \n https://localhost:8444 \n \n', 'tags': '', 'url': '8444.html'}, {'title': 'OBS', 'text': 'OBS的使用 \n ◾打開OBS \n \n ◾新增-顯示器擷取 \n \n ◾新增-視訊擷取裝置 \n \n ◾設定-串流-輸入串劉金鑰 \n \n ◾串流金鑰可於YouTube開始進行直播時複製 \n \n ◾ 開始串流 \n \n 補充:\xa0 如果 視訊擷取裝置無法正常顯示時... \n ◾ 開始-顯示器-圖形設定 \n \n ◾ 瀏覽-找尋OBS64.EXE-新增 \n \n ◾選項-省電 \n \n ◾實際操作影片 \n \n', 'tags': '', 'url': 'OBS.html'}, {'title': 'Python remote API', 'text': '使用Python remote API 進行操控 \n ◾下載 /downloads/vrep_remoteapi_ex.7z \n ◾開啟2w1a.py \n \n ◾將import vrep改成import sim as vrep \n \n ◾更改IPv4位址 \n \n ◾可利用ipconfig指令查看自己的IPv4位址 \n \n ◾Tools-Go \n \n ◾實際操作影片(GIF) \n \n', 'tags': '', 'url': 'Python remote API.html'}, {'title': 'CoppeliaSim物體顏色、透明度', 'text': '適當調整各物體顏色、透明度，可易於查看複雜結合件 \n ------------------------------------------------------------------------------------------- \n "更改顏色" \n ◾在物體圖示點2下左鍵，開啟屬性對話框 \n \n ◾點Adjust oolor \n \n ◾點Ambient/diffuse component \n \n ◾拖動框中6列數值可調整物體顏色 \n \n ◾實際操作影片 \n \n \n ------------------------------------------------------------------------------------------- \n "更改透明度" \n ◾在物體圖示點2下左鍵，開啟屬性對話框 \n \n ◾點Adjust oolor \n \n \n ◾將選項Opacity開啟，輸入數值即可更改透明度 \n \n ◾實際操作影片 \n \n', 'tags': '', 'url': 'CoppeliaSim物體顏色、透明度.html'}, {'title': 'CoppeliaSim碰撞&動態', 'text': '"碰撞"屬性 意思即為開啟狀態下，物體會和空間中其他物體發生碰撞，從而模擬實際物理作用狀態。 例:關閉時物體會直接穿過地面，開啟後物體會停於地面上。 \n 碰撞打勾設定解釋: \n 二物體"無"父子關係的物體，使用"下排"勾勾作設定，假設在相同位置都有勾勾的話，它們就會發生碰撞；假設在每一個位置上，都不會同時出現勾勾的話，他們就不會發生碰撞。 二物體"有"父子關係的物體，使用"上排"勾勾作設定，假設在相同位置都有勾勾的話，它們就會發生碰撞；假設在每一個位置上，都不會同時出現勾勾的話，他們就不會發生碰撞。 \n "動態"屬性 意思即為關閉狀態下，物體會被視為與世界坐標系固連的關係。 例:關閉時可懸浮於空間之中，不受其他物體碰撞而移動；開啟後會受到向下的重力作用&會受到和其它物件碰撞而產生不同方向的力。 \n ------------------------------------------------------------------------------------------- \n "開啟碰撞、動態屬性" \n ◾在物體圖示點2下左鍵，開啟屬性對話框 \n \n ◾ 點Show dynamic properties dialog \n \n ◾ 點Body is respondable(開啟碰撞)， 框中勾勾用來做碰撞設定 \n \n ◾ 點Body is dynamic(開啟動態) \n \n ◾實際操作影片 \n \n', 'tags': '', 'url': 'CoppeliaSim碰撞&動態.html'}, {'title': 'gitlab', 'text': '利用 gitlab 建立與 github 倉儲靜態網站同步 \n ---------- \n ◾必須先至gitlab官網註冊帳號 \n 網址: https://about.gitlab.com/ \n ◾點New...\xa0➝點New project/repository \n \n ◾選Create blank project/repository \n \n ◾輸入要從github同步過來的倉儲名稱\xa0➝選Public\xa0➝不開啟Initialize repository with a README \n \n ◾倉儲建立完成 \n \n ◾在資料夾中輸入git branch確認主分支 \n \n ◾在資料夾中開啟.gitlab-ci.yml\xa0➝將master改成main \n \n ◾git push \n \n ◾再次 輸入git branch確認主分支\xa0➝git remote add gitlab (gitlab倉儲網址+.git)\xa0➝git push gitlab \n \n ◾完成後，gitlab同步github資料，但正常應該是綠勾(05/17以後需信用卡認證) \n \n ◾ 進行信用卡認證(錯誤步驟) \n \n ◾ 輸入信用卡資料 (錯誤步驟) \n \n ◾認證成功 \n \n ◾重整後又顯示為未認證狀態 \n \n ◾ 我總共認證3次，被收了3美元的認證費...(詐騙集團吧.. \n \n ◾解決方式:新增資料後在git push gitlab一次即可 \n \n ◾commit紀錄都在 \n \n ◾點Settings\xa0➝點Pages \n \n ◾顯示之網址為 同步後 gitlab的網址 \n \n ◾點網址連結後可看見同步頁面&網址 \n \n ◾實際操作影片 \n \n', 'tags': '', 'url': 'gitlab.html'}, {'title': 'gitlab-ssh', 'text': '利用 SSH 對 Gitlab 連線 \n  1.首先必須要將 OpenSSH 格式的 public key 登錄到 Gitlab 帳號下  \n 2.確定已經利用 putty.exe 建立 session 名稱為 gitlab.com 的設定, 其中設定 AUTH 與 Proxy 資料  \n 3.修改各倉儲中 .git/config 的 gitlab remote add 設定, 以 url = git@gitlab.com:user_name/url 對 gitlab 連接. \n ---------- \n ◾資料夾➝Portablegit➝bin➝sh.exe \n \n ◾輸入ssh-keygen -t rsa -b 4096 -C "40823210-gitlab"➝按enter➝輸入/y/tmp/id_rsa_gitlab➝按enter➝按enter \n \n ◾資料夾➝.git➝config➝更改[remote"gitlab"]的url=git@gitlab.com:40823210_cd2021.git \n \n ◾資料夾➝PuTTY➝puttygen.exe \n \n ◾點Load \n \n ◾選id_rsa_gitlab➝開啟 \n \n ◾點確定 \n \n ◾點Save private key \n \n ◾點是(Y) \n \n ◾資料夾➝tmp➝輸入40823210-gitlab.ppk➝存檔 \n \n ◾資料夾➝PuTTY➝putty.exe➝輸入(二處)gitlab.com➝Save \n \n ◾點SSH➝Auth➝Browse... \n \n ◾資料夾➝tmp➝選30823210-gitlab.ppk➝開啟 \n \n ◾點Session➝Save➝Open \n \n ◾到gitlab➝點Add SSH key \n \n ◾資料夾➝tmp➝開啟id_rsa_gitlab.pub➝複製全部內容 \n \n ◾將內容複製到SSH key➝Add key \n \n ◾點SSH Keys重整➝即可看到新增的SSH keys \n \n ◾利用gitlab-ssh推送成功 \n \n ◾實際操作影片 \n', 'tags': '', 'url': 'gitlab-ssh.html'}]};